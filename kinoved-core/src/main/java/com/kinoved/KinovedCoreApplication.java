package com.kinoved;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.openfeign.EnableFeignClients;

@EnableFeignClients(basePackages = "com.kinoved.clients")
@SpringBootApplication
public class KinovedCoreApplication {

	public static void main(String[] args) {
		SpringApplication.run(KinovedCoreApplication.class, args);
	}

	//ПЛАН РАБОТЫ

	//обращение в Кинопоиск
	//	done: поиск по названию - чтобы определить id
	//  done: поиск по id - чтобы получить полную информацию о фильме
	//  done: через shell-команду загружать данные фильма и сразу сохранять в бд Монго модель

	//  done: сделать сервис телеграм-бота.
	//   И настроить минимальное интерфейсное взаимодействие с основным сервисом.
	//   * Лаконично выводить инфу об всех имеющихся фильмах, c возможностью детализации
	//  todo с возможностью пагинации ?
	//   * продумать фильтры-отборы - по рейтингам, по жанрам.

	//  todo в сервисе kinoved-core сделать таблицу (коллекцию) статусов обработки файлов фильмов.
	//   При получении сообщения из file-manager - статус первый
	//   При нахождении данных фильма и сохранении их в бд - статус второй
	//   При перемещении файла в папку жанров - статус третий
	//   Иметь возможность посмотреть отчет по незавершенным статусам


	//  todo сделать заготовку сервиса файл-менеджер.
	//  todo Сообщение от файл-менеджера - в kinoved-core: перечень полей MovieFileInfo
	//   c кратким описанием фильма выполненного по наименованию,
	//   снизу кнопки 3:
	//   "подтвердить" - сохраняет в бд инфу о фильме
	//   	и отправляет в файл-менеджер задание на перенос файла в папку жанра
	//   "Поиск по транслитерации" - инициирует заново запрос по наименованию только транслитерации
	//   	далее все то же как и на предыдущем шаге
	//   "Ручной поиск" - операция пока не реализована -
	//   	выводит сообщение о том что надо отредактировать имя файла в папке source - это инициирует новый подбор
	//  todo при старте сервиса файл-менеджер сканировать папку source на наличие файлов фильмов -
	//   все существующие файлы отправлять на обработку

	//	kinoved-core
	//  todo сохранять признак разрешения(4к) и в дальнейшей позволять фильтроваться по нему
	//  todo давать возможность указывать признак "Просмотрено"
	//   (может быть позволять удалять фильмы по этому признаку)
	//  todo в полное представление фильма выводить названия всех файлов фильма
	//   (чтобы было легче его найти при просмотре) и размер файлов
	//  todo в краткое представление выводить признак 4К - если есть хотя бы один файл в 4к
	//   (анализировать MovieFileDto)

	//  todo обрабатывать дубли фильмов - полные копии и разные вариации.
	//   	Полные копии удалять и информировать об этом в телегу
	//   	Вариации - сначала находить в бд по id kpdev данные фильма.
	//   		Если есть добавлять фильм в эту коллекцию в список файлов фильма - добавить поле списка файлов
	//   			- это подтип MovieFileDto c полями name, size, resolution.

	//  todo поднять кафку и настроить взаимодействие по сообщениям
	//   между файл-менеджером и основным сервисом

	//  todo SearchMovie - сохранять в отдельной коллекции в БД для того
	//   чтобы предоставить возможность навигироваться по вариантам описаний фильмов
	//   при запросе на подтверждение фильма файла - это кнопки "далее" или "назад" под сообщением

	// Второй этап детализации основного сервиса
	//	todo выводить скриншоты по фильму inline-кнопкой -
	//		 новым сообщением типа SendGroupMedia как ответ на сообщение описания фильма
	//  todo Получить полный список стран, жанров, типов фильмов и статусов - ПОДУМАТЬ что с этим делать
	//	todo Обработка ответов с ошибками (приведены в спецификации кинопоиска)


	//todo добавить признак "Любимые" (кнопка)
}
